name: CI

on:
  push:
  pull_request:

jobs:
  tests-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Env diagnostics
        shell: pwsh
        run: |
          $PSVersionTable
          "PSModulePath:"; ($env:PSModulePath -split ';') | ForEach-Object { "  - $_" }
          "Repo tree (depth=2):"; Get-ChildItem -Depth 2 | Select-Object FullName
          "Have tests/ci?"; Test-Path tests/ci; Get-ChildItem tests/ci -Filter *.ps1 -ErrorAction SilentlyContinue

      - name: Ensure Pester 5.5.0 (pwsh; allow signer change)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          if (-not (Get-Module -ListAvailable Pester | Where-Object { $_.Version -eq [version]'5.5.0' })) {
            Install-Module -Name Pester -Scope CurrentUser -Force -RequiredVersion 5.5.0 -SkipPublisherCheck -AllowClobber
          }
          Import-Module Pester -RequiredVersion 5.5.0 -Force
          Get-Module -ListAvailable Pester | Sort-Object Version -Descending | Select-Object -First 3 | Format-Table Name,Version,ModuleBase

      - name: Run tests (Pester v5 config, tests/ci only)
        shell: pwsh
        env:
          ATS_NOEXIT: "1"
        run: |
          $ErrorActionPreference = 'Continue'
          New-Item -ItemType Directory -Force -Path artifacts | Out-Null
          $junit = Join-Path $PWD 'artifacts\testResults.xml'
          $log   = Join-Path $PWD 'artifacts\pester.log'

          Get-Module Pester | Remove-Module -Force -ErrorAction SilentlyContinue
          Import-Module Pester -RequiredVersion 5.5.0 -Force

          # Pester v5: використовуємо Configuration object
          $cfg = [PesterConfiguration]::Default
          $cfg.Run.Path        = 'tests/ci'
          $cfg.Run.PassThru    = $true
          $cfg.Output.Verbosity = 'Detailed'
          $cfg.TestResult.Enabled      = $true
          $cfg.TestResult.OutputPath   = $junit
          $cfg.TestResult.OutputFormat = 'NUnitXml'

          $res = Invoke-Pester -Configuration $cfg *>&1 | Tee-Object -FilePath $log

          "---- Pester tail ----"
          if (Test-Path $log) { Get-Content $log -Tail 50 }

          $failed = 1
          if ($null -ne $res -and $res -is [Pester.Run] -and $null -ne $res.Result) {
            $failed = [int]$res.Result.FailCount
          } elseif ($null -ne $res -and $res.FailedCount -is [int]) {
            $failed = [int]$res.FailedCount
          } else {
            $failed = 1
          }

          if ($failed -gt 0) { exit 1 } else { exit 0 }

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-artifacts
          path: artifacts/
