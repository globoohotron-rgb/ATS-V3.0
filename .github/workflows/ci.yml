name: CI

on:
  push:
  pull_request:

jobs:
  tests-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Env diagnostics
        shell: pwsh
        run: |
          $PSVersionTable
          "PSModulePath:"; ($env:PSModulePath -split ';') | ForEach-Object { "  - $_" }
          "Repo tree (depth=2):"; Get-ChildItem -Depth 2 | Select-Object FullName

      - name: Install Pester 5.5.0
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module -Name Pester -Scope CurrentUser -Force -RequiredVersion 5.5.0
          Get-Module -ListAvailable Pester | Sort-Object Version -Descending | Select-Object -First 5 | Format-Table Name,Version,ModuleBase

      - name: Prepare artifacts folder
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path "$Env:GITHUB_WORKSPACE\artifacts" | Out-Null
          "Artifacts at: $Env:GITHUB_WORKSPACE\artifacts"

      - name: Run tests (Pester v5, tests/ci only)
        shell: pwsh
        env:
          ATS_NOEXIT: "1"
        run: |
          $ErrorActionPreference = 'Continue'   # –Ω–µ –≤–∞–ª–∏–º–æ step –¥–æ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è –ª–æ–≥—ñ–≤
          Get-Module Pester | Remove-Module -Force -ErrorAction SilentlyContinue
          Import-Module Pester -RequiredVersion 5.5.0 -Force

          $junit = Join-Path $Env:GITHUB_WORKSPACE 'artifacts\testResults.xml'
          $log   = Join-Path $Env:GITHUB_WORKSPACE 'artifacts\pester.log'

          # –∑–∞–ø—É—Å–∫–∞—î–º–æ Pester —ñ –∑–∞–≤–∂–¥–∏ –∑–±–∏—Ä–∞—î–º–æ —Å–∏—Ä–∏–π –ª–æ–≥
          $result = Invoke-Pester -CI -Path tests/ci -OutputFormat NUnitXml -OutputFile $junit -PassThru *>&1 |
                    Tee-Object -FilePath $log

          "---- Pester tail ----"
          if (Test-Path $log) { Get-Content $log -Tail 50 } else { "no pester.log" }

          # —è–∫—â–æ –∑ –±—É–¥—å-—è–∫–æ—ó –ø—Ä–∏—á–∏–Ω–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è ‚Äî –≤–≤–∞–∂–∞—î–º–æ, —â–æ —Ñ–µ–π–ª
          $failed = $true
          if ($null -ne $result) {
            # Pester 5: FailedCount; (–ø—ñ–¥—Å—Ç—Ä–∞—Ö—É—î–º–æ—Å—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∏–º –ø–æ–ª–µ–º Failed)
            $fc = ($result.FailedCount, $result.Failed | Where-Object { $_ -is [int] } | Select-Object -First 1)
            if ($null -eq $fc) { $fc = 0 }
            $failed = [int]$fc -gt 0
          }

          if ($failed) { Write-Host "##[error] Tests failed"; exit 1 } else { Write-Host "All good üíö"; exit 0 }

      - name: Upload test artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pester-artifacts
          path: artifacts/
