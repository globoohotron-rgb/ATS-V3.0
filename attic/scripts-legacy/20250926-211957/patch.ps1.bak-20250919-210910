param(
  [Parameter(Mandatory)][string]$Spec,
  [switch]$DryRun,
  [switch]$NoQC
)
Set-StrictMode -Version Latest
$ErrorActionPreference='Stop'
Import-Module (Join-Path $PSScriptRoot '..\tools\patchkit.psm1') -Force

if(!(Test-Path $Spec)){ throw "Spec not found: $Spec" }
$specData = Import-PowerShellDataFile -Path $Spec
$Name   = $specData.Name
$Target = $specData.Target
$Steps  = $specData.Steps
$QC     = $specData.QC

Write-Host "▶ Applying patch: $Name" -ForegroundColor Cyan

# Preflight: git чистий (не обов’язково, але попереджаємо)
try {
  $dirty = (& git status --porcelain) 2>$null
  if($dirty){ Write-Warning "Git working tree is not clean." }
} catch { }

# Backup
$files = $Steps | ForEach-Object { $_.Path } | Select-Object -Unique
$backup = New-PatchBackup -Paths $files
Write-Host "Backup at: $($backup.Dir)"

# Apply
$changed = @()
foreach($s in $Steps){
  $path = $s.Path
  $type = $s.Type
  $ok = $false
  switch($type){
    'InsertAfter'  { $ok = Insert-AfterPattern -Path $path -Pattern $s.Pattern -Lines $s.Lines }
    'EnsureBlock'  { $ok = Ensure-BlockByMarkers -Path $path -StartMarker $s.Start -EndMarker $s.End -Lines $s.Lines }
    'ReplaceRegex' { $ok = Replace-Regex -Path $path -Pattern $s.Pattern -Replacement $s.Replacement -Single:$s.Single }
    default { throw "Unknown step type: $type" }
  }
  if($ok){ $changed += $path; Write-Host "✔ $type on $path" } else { Write-Host "• $type no-op on $path" }
}

# Parse check
$psFiles = $changed | Where-Object { $_ -like '*.ps1' } | Select-Object -Unique
foreach($f in $psFiles){
  $r = Test-ParseScript $f
  if(-not $r.$true){
    Write-Error "Parse error in $f"; $r.Errors | ForEach-Object { Write-Host $_ }
    throw "Parse check failed."
  }
}

if($DryRun){
  Write-Host "Dry-run: patch changes applied to working tree only (no QC/no commit)."
  exit 0
}

# QC (optional)
if(-not $NoQC -and $QC){
  Write-Host "QC: $($QC.Command)" -ForegroundColor Yellow
  & $QC.Command @($QC.Args)  # напр.: .\scripts\selftest.ps1
}

Write-Host "✅ Patch applied: $Name" -ForegroundColor Green
